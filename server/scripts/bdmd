#!/bin/bash
# Bismark Devices Management Daemon wrapper
#
# author: walter.dedonato@unina.it

# Load configuration file
. ~/etc/bdm.conf

# Aliases
query(){ sqlite3 -list $1 "$2"; }

# Help screen
# $1 = command
function help() 
{
	cat <<-end
	Syntax:

	    $(basename $0) [options] <start|stop|restart|info>
	
	Options:
	
	    -l <prb_port>    Port number to listen on for probe packets (default: $PROBE_PORT)
	    -h               Print help screen
	end
	exit
}

## Main ##

# Check directories
mkdir -p ~/var/log/devices/

# Check DB
if [ ! -e $BDM_DB ]; then
	query $BDM_DB "CREATE TABLE devices(
		id      TEXT PRIMARY KEY,
		version INTEGER, 
		user    TEXT, 
		ip      TEXT, 
		ts      INTEGER
	       );"
	query $BDM_DB "CREATE TABLE tunnels(
		id      TEXT,
		port    INTEGER, 
		ts      INTEGER
	       );"
	query $BDM_DB "CREATE TABLE blacklist(
		id      TEXT PRIMARY KEY
	       );"
fi
if [ ! -e $MSG_DB ]; then
	query $MSG_DB "CREATE TABLE messages(
		'from'  TEXT,
		'to'    TEXT, 
		msg     TEXT
	       );"
fi
if [ ! -e $MSR_DB ]; then
	query $MSR_DB "CREATE TABLE targets(
		ip       TEXT PRIMARY KEY,
		cat      TEXT, 
		zone     TEXT,
		free_ts  INTEGER,
		curr_cli INTEGER,
		max_cli  INTEGER
	       );"
	query $MSR_DB "CREATE TABLE capabilities(
		ip       TEXT,
		service  TEXT,
		info     TEXT
	       );"
	query $MSR_DB "CREATE TABLE mtypes(
		type       TEXT PRIMARY KEY,
		exclusive  INTEGER 
	       );"
fi

# Parse command-line
while getopts 'l:h' flag; do
	case $flag in
	l)
		PROBE_PORT=$OPTARG
	;;
	h)
		help
	;;
	*)
		echo "Unknown option: $flag $OPTARG"
		help
	;;
	esac
done
shift $(( OPTIND - 1 ))

pids=$(pgrep bdmd.real)
ports=$(sudo netstat -lnup | awk -F"[\t: ]*" '/bdmd.real/{ print $5 }')
case $1 in
start)
	if [ "$( echo $ports | awk "/$PROBE_PORT/{ print \"busy\" }")" == "busy" ]; then
		echo "bdmd already running on port $PROBE_PORT"
	else
		echo -n "Starting bdmd..."
		bdmd.real $PROBE_PORT >> $BDMD_LOG_FILE 2> /tmp/bdmd.debug &
		sleep 1
		[ "$(pgrep bdmd.real)" ] && echo "done" || echo "error"
	fi
;;
stop)
	if [ "$pids" ]; then 
		echo -n "Stopping bdmd..."
		kill $pids
		sleep 1
		[ "$(pgrep bdmd.real)" ] && echo "error" || echo "done" 	
	else
		echo "bdmd not running"
	fi
;;
restart)
	$0 stop
	$0 -l $PROBE_PORT start 
;;
info)
	if [ "$pids" ]; then
		echo "bdmd listening on "$ports" (pids "$pids")"
	else
		echo "bdmd not running"
	fi
;;
*)
	help
;;
esac

