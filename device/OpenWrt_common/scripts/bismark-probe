#!/bin/ash
# Send UDP probes to Bismark server and
# call action script depending on the answer
# Provides:
# - device heartbeat
# - UDP proxy fallback
#
# author: walter.dedonato@unina.it

# Load configuration file
. /etc/bismark/bismark.conf
. /usr/lib/bismark/functions.inc.sh

# Local config
MAX_SLEEP=30

# Probe message generator
msg () {
	echo "$DEVICE_ID ping $VERSION"
	sleep 1
	return 0
}

# Create status files
[ -e /tmp/bismark/var/faults ] || echo 0 > /tmp/bismark/var/faults
[ -e /tmp/bismark/var/proxy ] || echo 0 > /tmp/bismark/var/proxy

# Check faults count
faults=$(cat /tmp/bismark/var/faults)
if [ $faults -ge 20 ]; then
	proxy=$(cat /tmp/bismark/var/proxy)
	echo $(( (proxy + 1) % 2 )) > /tmp/bismark/var/proxy
	echo 0 > /tmp/bismark/var/faults
	faults=0
fi

# Random delay wait
sleep $(random 0 $MAX_SLEEP)

# Send probe and store reply
if [ $(cat /tmp/bismark/var/proxy) -eq 1 ]; then
	msg | nc -u $NC_OPTS $PROXY $PROXY_PORT > /tmp/bismark/var/reply
else
	msg | nc -u $NC_OPTS $SERVER $PROBE_PORT > /tmp/bismark/var/reply
fi

# Refresh faults count
if [ "`cat /tmp/bismark/var/reply`" ]; then
	echo 0 > /tmp/faults
	#event uplink up
else
	echo $((++faults)) > /tmp/faults
	#event uplink down
fi

# Parse reply
read cmd value < /tmp/bismark/var/reply
[ $cmd ] && REMOTE=on bismark-action $cmd $value

