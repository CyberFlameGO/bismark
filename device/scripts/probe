#!/bin/sh
# Send UDP probes to Bismark server and
# acts depending on the answer
#
# Currently implements:
# - Bismark server heartbeat
# - on-demand SSH tunnel
# - software update
# - information query
# - UDP proxy fallback
#
# author: walter.dedonato@unina.it

# Load configuration file
. ~/conf/dev.conf

# Probe message generator
msg () {
	echo "$DEVID ping $VERSION"
	sleep 3
	return 0
}

# OS depending options
if [ -e /etc/openwrt_version ]; then
	NC_OPTS="-nuc"
	KEEP_ALIVE="-K 120"
else
	NC_OPTS="-q1 -nu"
	KEEP_ALIVE="-o ServerAliveInterval=120"
	PF=on
fi

# Create status files
[ -e /tmp/faults ] || echo 0 > /tmp/faults
[ -e /tmp/proxy ] || echo 0 > /tmp/proxy

# Check faults count
faults=$(cat /tmp/faults)
if [ $faults -ge 20 ]; then
	proxy=$(cat /tmp/proxy)
	echo $(( (proxy + 1) % 2 )) > /tmp/proxy
	echo 0 > /tmp/faults
	faults=0
fi

# Send probe and store reply
if [ $(cat /tmp/proxy) -eq 1 ]; then
	msg | nc $NC_OPTS $PROXY $PROXY_PORT > /tmp/reply
else
	msg | nc $NC_OPTS $SERVER $PROBE_PORT > /tmp/reply
fi

# Refresh faults count
if [ "`cat /tmp/reply`" ]; then
    echo 0 > /tmp/faults
else
    echo $((++faults)) > /tmp/faults
fi

# Parse reply
read cmd value < /tmp/reply
case $cmd in 
fwd)
	# on-demand SSH tunnel
	ssh $KEEP_ALIVE -N -i $SSH_KEY -R $value:127.0.0.1:22 $USER@$SERVER &
;;
pong)
	# Server heartbeat
	date +%s > /tmp/server_last
;;
update)
	# Software update
	case $value in
	all)
		scp -q -i $SSH_KEY $USER@$SERVER:~/bismark/device/dev-*.tgz /tmp/dev.tgz
		tar -C /root -xzf /tmp/dev.tgz
		rm /tmp/dev.tgz
		crontab conf/crontab
		[ $PF ] && /noxbox/bin/persist_changes
	;;
	*)
		scp -i $SSH_KEY $USER@$SERVER:~/bismark/device/$value $value
	;;
	esac
	find /root | nc $NC_OPTS $SERVER $((PROBE_PORT+5301))
;;
info)
	# Info reply
	sleep 1
	nc $NC_OPTS $SERVER $((PROBE_PORT+5301)) <<-end
		Version: $(cat ~/VERSION)
	end
;;
esac

