#!/bin/bash
# Bismark Devices Installation script
#
# author: walter.dedonato@unina.it

DEVHOST_PUB_KEY=~/.ssh/id_rsa.pub
SVN_DIR=$(find ~ -mindepth 1 -maxdepth 2 -type d -name bismark)
SERVER_PUB_KEY="$SVN_DIR/server/keys/bismark_srv.pub"
SERVER_HOST_KEY="$SVN_DIR/device/keys/known_hosts"
DEVICE_SSH_KEY="$SVN_DIR/device/keys/bismark"
ROOT_PASS=$(md5sum <<< bismark | cut -d" " -f1)
PASS="sleep 1; echo $ROOT_PASS;"
VERSION=$(svn info $SVN_DIR | awk '/^Rev/{ print $2 ; exit }')
SSH_OPT="-i $SVN_DIR/server/keys/bismark_srv -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
SCP_OPT=$SSH_OPT

# Parse options
while getopts 'kp:' flag; do
	case $flag in
	p)
		SSH_OPT+=" -p $OPTARG"
		SCP_OPT+=" -P $OPTARG"
	;;
	k)
		KEYS="on"
	;;
	*)
		echo "Unknown option: $flag $OPTARG"
		help
	;;
	esac
done
shift $(( OPTIND - 1 ))

# Command line check
if [ ! $2 ]; then
	cat <<-end
		usage: $(basename $0) [options] <address> <dev_id>"
	
		Options:
		       -p <port>      set SSH port number
		       -k             configure SSH public key authentication
	
		Device ids:
		       LSx = Linksys WRT54GL (OpenWRT Kamikaze 8.09.1)
		       NBx = NoxBox (Debian Lenny 5.0.4)
		       WSx = Generic Linux Workstation
	end
	exit
fi

# Device specific options selection
case ${2:0:2} in
LS)
	echo "Installing Bismark on Lynksys WRT54GL router ($1 $2)..."
	echo "-- if requested insert \"$ROOT_PASS\" password --"
	suffix="ls"
	auth_keys="/etc/dropbear/authorized_keys"
	user=root
;;
NB)
	echo "Installing Bismark on NoxBox router ($1 $2)..."
	echo "-- if requested insert \"n0xb0xr0x\" password --"
	suffix="nb"
	auth_keys="~/.ssh/authorized_keys"
	user=root
;;
WS)
	echo "Installing Bismark on Workstation ($1 $2)..."
	echo -n "Insert SSH user name: "
	read user
	echo "-- if requested insert password --"
	suffix="ws"
	auth_keys="~/.ssh/authorized_keys"
;;
*)
	echo "Model ${2:0:2} unknown"
	exit
;;
esac

## Functions  ##

# Install linksys packages
# $1 = device address
# $* = packages list
function linksys_pkg()
{
	ip=$1 ; shift
	REPOSITORY="http://downloads.openwrt.org/kamikaze/8.09.1/brcm-2.4/packages/"
	INSTALLED=$(ssh $SSH_OPT $user@$ip 'opkg list_installed')

	for pkg in $*; do 
		echo "$INSTALLED" | grep -q $pkg && continue
		echo "Installing $pkg package:"
		wget -O /tmp/$pkg "http://downloads.openwrt.org/kamikaze/8.09.1/brcm-2.4/packages/$pkg"
		scp $SCP_OPT /tmp/$pkg $user@$ip:/tmp
		ssh $SSH_OPT $user@$ip "opkg install /tmp/$pkg ; rm /tmp/$pkg"
		echo done
	done
}

## Installation ##

# Lynksys first-time telnet login
if [ $suffix == ls ] && nc -z $1 23 ; then
	echo "Setting root password and NVRAM options:"
	sleep 1
	nc -q 1 -i 3 $1 23 <<-end
		{ $PASS $PASS } | passwd
		nvram set boot_wait=on
		nvram set boot_time=10
		nvram commit && reboot
	end
	
	echo -n "Waiting for reboot"
	for ((i=0; i<10; i++)); do sleep 1; echo "."; done
	echo "done"
fi

# Generic public key auth config
if [ $KEYS ]; then
	echo -n "Adding SSH public and host keys..."
	ssh $SSH_OPT $user@$1 " 
		mkdir -p .ssh 
		echo \"$(cat $SERVER_PUB_KEY $DEVHOST_PUB_KEY)\" > $auth_keys
		echo \"$(cat $SERVER_HOST_KEY)\" > ~/.ssh/known_hosts
	" 2>/dev/null
	echo "done"

	echo "Copying SSH key pair:"
	chmod 600 ${DEVICE_SSH_KEY}_$suffix
	scp $SCP_OPT ${DEVICE_SSH_KEY}_$suffix{,.pub} $user@$1:~/.ssh 2>/dev/null 
fi

# Lynksys only
if [ $suffix == ls ]; then
	ssh $SSH_OPT $user@$1 '
		mkdir /tmp/bin /tmp/lib
		ln -s /tmp/bin bin
		ln -s /tmp/lib lib
	'
fi

echo "Copying & installing last version package:"
scp $SCP_OPT $SVN_DIR/device/dev-${2:0:2}-*.tgz $user@$1:/tmp/dev.tgz
ssh $SSH_OPT $user@$1 'tar -xzvf /tmp/dev.tgz ; rm /tmp/dev.tgz' 

echo -n "Setting device id..."
ssh $SSH_OPT $user@$1 "echo DEVICE_ID=$2 > local.conf" 2>/dev/null
echo "done"

echo -n "Configuring cronjobs..."
ssh $SSH_OPT $user@$1 "crontab conf/crontab" 2>/dev/null
echo "done"

# Lynksys only
if [ $suffix == ls ]; then
	echo -n "Creating bash to ash wrapper..."
	ssh $SSH_OPT $user@$1 'echo -e "#!/bin/sh\nash i\$*" > /bin/bash ; chmod +x /bin/bash' 2>/dev/null
	echo done

#	linksys_pkg $1 $(grep ^LS ~/conf/packages.conf | cut -f2) 

	echo -n "Starting crond daemon..."
	ssh $SSH_OPT $user@$1 "/etc/init.d/cron enable ; pgrep crond >/dev/null || /etc/init.d/cron start" 2>/dev/null
	echo done
fi

# Noxbox only
if [ $suffix == nb ]; then
	echo "Setting root password:"
	ssh $SSH_OPT $user@$1 "{ $PASS $PASS } | passwd" 2>/dev/null

	echo -n "Setting fstab..."
	ssh $SSH_OPT $user@$1 'echo /dev/hda2 /mnt ext2 rw,user,noatime 0 0 > /etc/fstab' 2>/dev/null
	echo done

	echo "Persisting changes to flash memory:" 
	ssh $SSH_OPT $user@$1 "/noxbox/bin/persist_changes" 2>/dev/null
fi

# All but Workstations
if [ $suffix != "ws" ]; then
	echo "Configuring wireless:"
	WPA_PSK=$(md5sum <<< $2 | cut -f 1)
	ssh $SSH_OPT $user@$1 'scripts/action config "ssid='$2'&wpa_psk='$WPA_PSK'&channel=1"'
	echo done
fi

echo "Installation completed"

