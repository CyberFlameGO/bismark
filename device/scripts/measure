#!/bin/bash
# Executes a measurement cycle
# 
# author: walter.dedonato@unina.it

# Load configuration file
. ~/conf/dev.conf

# Globals
xml_file="/tmp/${DEVID}_$(date +%s).xml"

# Get target IP
# $1 = tool
# $2 = target category
target()
{
	dst=$(awk '
		/\[.*\]/{ if (s == 1) { s=0 } }
		/\['$2'\]/{ s=1 }
		(s == 1) && /^[a-z0-9]/ && /'$1'/{ print $1 }
	' ~/conf/targets.conf | head -1)
}

# Create dirs and files
mkdir -p /tmp/measure
[ -e /tmp/measure/counter ] || echo 0 > /tmp/measure/counter

# Get and update count
count=$(cat /tmp/measure/counter)
echo $(( (count + 1) % 288 )) > /tmp/measure/counter

# Get source IP
src=$(cat /tmp/ip)

# XML file header
cat > $xml_file <<-end
	<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
	<measurements version="1.0">
	        <info deviceid=$DEVID userid=$USERID />
end

# RTT measurement using PING
target PING Bismark
bping $dst | mstats RTT PING $src $dst >> $xml_file

# Traceroute
if [ $((count % 6)) -eq 0 ]; then
	target TR Bismark
	hops=$(btr $dst)
	hops_cnt=$(echo "$hops" | wc -l)
	if [ $hops_cnt -gt 1 ]; then
		cat >> $xml_file <<-end
		        <traceroute srcip=$src dstip=$dst timestamp=$(date +%s) hops=$hops_cnt>
			$(echo "$hops" | awk '{ print "                " $0 }')
		        </traceroute>
		end
	fi
fi

# Downstream bitrate using wget and FTP
#if [ $((count % 4)) -eq 0 ]; then
#	target FTPDL Bismark
#	dst_ip=$(echo $dst | awk -F'[/:]' '{ print $4 }')
#	bwget "$dst" dw | mstats BITRATE WGET $dst_ip $src | grep -v nan >> $xml_file
#fi

if [ ${DEVID:0:2} != LS ]; then
	# Upstream bitrate using curl and HTTP
	if [ $((count % 4)) -eq 0 ]; then
		target HTTPDL Bismark
		dst_ip=$(echo $dst | awk -F'[/:]' '{ print $4 }')
		bcurl "$dst" dw $HTTP_DURATION | mstats BITRATE CURL $dst_ip $src | grep -v nan >> $xml_file
	fi

	# Upstream bitrate using curl and HTTP
	if [ $((count % 4)) -eq 0 ]; then
		target HTTPUL Bismark
		dst_ip=$(echo $dst | awk -F'[/:]' '{ print $4 }')
		bcurl "$dst" up $HTTP_DURATION | mstats BITRATE CURL $src $dst_ip | grep -v nan >> $xml_file
	fi
fi

# XML file footer
cat >> $xml_file <<-end
	</measurements>
end

# Move file to measure folder
mv $xml_file /tmp/measure
