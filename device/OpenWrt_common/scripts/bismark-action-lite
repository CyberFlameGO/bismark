#!/bin/ash
# Device actions script
# Provides:
# - server heartbeat
# - software update
# - configuration query/pull
#
# author: walter.dedonato@unina.it

# Import configuration and functions
. /etc/bismark/bismark.conf
. /etc/bismark/bismark-lite.conf
. /usr/lib/bismark/functions.inc.sh

# Help screen
[ $1 ] || { echo "$(basename $0) <command> [options]" ; exit ; }

# Perform the requested action
case $1 in
pong)	# Server heartbeat
	ltime=$(date +%s)
	stime=$(( $3 + 2 ))

	# Check clock synch
	[ $stime -gt $((ltime + 1)) ] && resync=true
	[ $stime -lt $((ltime - 1)) ] && resync=true
	if [ $resync ]; then
		ltime=$stime
		date -s @$ltime
		hwclock -w
	fi
	echo $ltime > /tmp/bismark/var/server_last

	# Store public IP 
	echo $2 > /tmp/bismark/var/ip
;;
update) # Software update
       if [ "$2" ]; then
               # Upgrade from URL to ipk package
               wget -O /tmp/bismark/pkg.ipk "$2"
               opkg install /tmp/bismark/pkg.ipk | output $1
               rm /tmp/bismark/pkg.ipk
       else
               # Upgrade everything from repositories
               opkg update
               opkg upgrade
       fi 
;;
scriptupdate) # script file update
       if [ "$2" ]; then
               # Upgrade script from URL 
               wget -O /tmp/bismark/$DEVICE_ID.sh "$2"
       else
               # Upgrade script from default URL
               wget -O /tmp/bismark/$DEVICE_ID.sh "$SCRIPT_URL"
       fi 
	   chmod 544 /tmp/bismark/$DEVICE_ID.sh
;;
config)
	# Modify parameters	
	if [ "$2" ]; then 
		# Parse new configuration
		IFS=$'&'
		for param in $2; do
			name=${param%=*}
			value="${param#*=}"

			# Check generic parameter validity
			grep -q "^$name=" /etc/bismark/{bismark,local}.conf || { echo -e "Invalid option $name\n" >&2; continue ; }

			# Assign new value to parameter
			eval "$name=\"$value\""

			if [ "$value" ]; then
				# Store parameter 
				if grep -q "^$name=" /tmp/local.conf; then
					# Substitute
					mod_conf /tmp/local.conf $name "$value"
				else
					# Append
					echo $name="$value" >> /tmp/local.conf
				fi
			elif grep -q "^$name=" /tmp/local.conf; then
				# Remove parameter from local.conf
				mod_conf /tmp/local.conf $name
			fi
		done
	fi

	# Configuration output
	set | awk -F'=' '(FNR==1){ f+=1 } /=/{ if (f == 1){a[$1]=1} else { if (a[$1] == 1) print $1 "=" $2} }' /etc/bismark/bismark.conf - | output $1
;;
dataupload) # script file update
       if [ "$2" ]; then
               # Upgrade script from URL 
               wget -O /dev/null/ --post-file="$2" $UPLOAD_URL
	   fi
esac

