#!/bin/bash
# Bismark Devices Installation script
#
# author: walter.dedonato@unina.it

DEVHOST_PUB_KEY=~/.ssh/id_rsa.pub
SVN_DIR=$(find ~ -mindepth 1 -maxdepth 2 -type d -name bismark)
SERVER_PUB_KEY="$SVN_DIR/server/keys/bismark_srv.pub"
SERVER_HOST_KEY="$SVN_DIR/device/keys/known_hosts"
DEVICE_SSH_KEY="$SVN_DIR/device/keys/bismark"
ROOT_PASS=$(md5sum <<< bismark | cut -d" " -f1)
PASS="sleep 1; echo $ROOT_PASS;"
VERSION=$(svn info $SVN_DIR | awk '/^Rev/{ print $2 ; exit }')
SSH_OPT="-i $SVN_DIR/server/keys/bismark_srv -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
SCP_OPT=$SSH_OPT
PARTITION="hda2"
DEV_TYPES="LS NB WS"

## Functions  ##

# Install linksys packages
# $1 = device address
# $* = packages list
function linksys_pkg()
{
	ip=$1 ; shift
	REPOSITORY="http://downloads.openwrt.org/kamikaze/8.09.1/brcm-2.4/packages/"
	INSTALLED=$(ssh $SSH_OPT $user@$ip 'opkg list_installed')

	for pkg in $*; do 
		echo "$INSTALLED" | grep -q $pkg && continue
		echo "Installing $pkg package:"
		wget -O /tmp/$pkg "http://downloads.openwrt.org/kamikaze/8.09.1/brcm-2.4/packages/$pkg"
		scp $SCP_OPT /tmp/$pkg $user@$ip:/tmp
		ssh $SSH_OPT $user@$ip "opkg install /tmp/$pkg ; rm /tmp/$pkg"
		echo done
	done
}

# Create device packages
function create_pkg()
{
	# Update version number
	svn update $SVN_DIR
	VERSION=$(svn info $SVN_DIR | awk '/^Rev/{ print $2 ; exit }')

	# Create last release packages
	for type in $DEV_TYPES; do
		if [ ! -e $SVN_DIR/device/dev-$type-$VERSION.tgz ]; then
			echo "Creating $type package version $VERSION:"

			# Clean & create package tree
			rm -f $SVN_DIR/device/dev-$type-*.tgz
			rm -rf /tmp/pkg/$type
			mkdir -p /tmp/pkg/$type
			mkdir /tmp/pkg/$type/{conf,scripts,bin,lib}

			# Copy files
			(
			 cd $SVN_DIR/device
			 cp -d conf/* /tmp/pkg/$type/conf
			 sed -i -e "/^VERSION=/ s/=.*/=$VERSION/" /tmp/pkg/$type/conf/dev.conf
			 cp -d scripts/* /tmp/pkg/$type/scripts
			 [ -e bin/$type ] && (cd  bin/$type && tar -cf /dev/stdout --exclude=.svn . | tar -C /tmp/pkg/$type/bin -xf /dev/stdin )
			 [ -e lib/$type ] && cp -d lib/$type/* /tmp/pkg/$type/lib
			)

			# Create tgz archive
			(
			 cd /tmp/pkg/$type
			 tar -czvf $SVN_DIR/device/dev-$type-$VERSION.tgz *
			)
		fi
	done
}

# Parse options
while getopts 'd:kp:u' flag; do
	case $flag in
	p)
		SSH_OPT+=" -p $OPTARG"
		SCP_OPT+=" -P $OPTARG"
	;;
	d)
		PARTITION=$OPTARG
	;;
	k)
		KEYS="on"
	;;
	u)
		create_pkg
		exit
	;;
	*)
		echo "Unknown option: $flag $OPTARG"
		help
	;;
	esac
done
shift $(( OPTIND - 1 ))

# Command line check
if [ ! $2 ]; then
	cat <<-end
		usage: $(basename $0) [options] <address> <dev_id>"
	
		Options:
		       -p <port>      set SSH port number
		       -d <partition> set flash card partition (default: hda2)
		       -k             configure SSH public key authentication
		       -u             just create packages
	
		Device ids:
		       LSx = Linksys WRT54GL (OpenWRT Kamikaze 8.09.1)
		       NBx = NoxBox (Debian Lenny 5.0.4)
		       WSx = Generic Linux Workstation
	end
	exit
fi

echo "Installing Bismark (OpenWRT-i586)..."
auth_keys="/etc/dropbear/authorized_keys"
user=root

## Installation ##

echo -n "Setting rc.local and mounting storage partition..."
cat >/tmp/rc.local <<-END
	$(head -3 /etc/rc.local)
	# Mount storage partition
	mount /dev/sda3 /root
	# echo "/dev/'$PARTITION' /root ext2 rw,user,noatime,exec 0 0" > /etc/fstab
	cat /etc/crontabs/root /root/conf/crontab | crontab -

	exit 0
END
echo done

# Generic public key auth config
echo -n "Adding SSH public and host keys..."
mkdir -p .ssh 
echo "$(cat $SERVER_PUB_KEY $DEVHOST_PUB_KEY)" > $auth_keys
echo "$(cat $SERVER_HOST_KEY)\" > ~/.ssh/known_hosts
echo "done"

echo "Copying SSH key pair:"
chmod 600 ${DEVICE_SSH_KEY}_$suffix
scp $SCP_OPT ${DEVICE_SSH_KEY}_$suffix{,.pub} $user@$1:~/.ssh 2>/dev/null 

echo "Creating/updating release packages:"
#create_pkg

echo "Copying & installing last version package:"

echo -n "Setting device id..."
echo $2 > ID
echo "done"

echo -n "Configuring cronjobs..."
crontab conf/crontab 
echo "done"

#	linksys_pkg $1 $(grep ^LS ~/conf/packages.conf | cut -f2) 


# Noxbox only
if [ $suffix == nb ]; then
	echo "Setting root password:"
	ssh $SSH_OPT $user@$1 "{ $PASS $PASS } | passwd" 2>/dev/null

	echo "Persisting changes to flash memory:" 
	ssh $SSH_OPT $user@$1 "/noxbox/bin/persist_files /etc/shadow" 2>/dev/null
fi

# All but Workstations
if [ $suffix != "ws" ]; then
	echo "Configuring wireless:"
	WPA_PASS=$(md5sum <<< $2 | awk '{ print $1 }')
	ssh $SSH_OPT $user@$1 'scripts/action config "WIFI_SSID='$2'&WIFI_PASS='$WPA_PASS'"'
	echo done
fi

echo "Installation completed"

