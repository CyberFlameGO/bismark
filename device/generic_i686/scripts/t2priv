#!/usr/bin/perl  

use List::MoreUtils qw(uniq);
use Socket 'inet_ntoa';
use Sys::Hostname 'hostname';

my $file0= $ARGV[0] ;
my $file1= $ARGV[1] ;

my $flag0=1 ;
my $flag1=1 ;
my ($data,$config);
my (@IpList,@dataLines) ;

sub err{
    #print "error:" ,$_[0] ;    
    close($_[1]);
    if ($_[1]=~/^FH1$/){
	#data file can't be read
	print "syntax: $0 <conf_file> <t2_file>\n" ;
	exit ; #"the data file containing flow information cannot be read" ;
    }
    elsif($_[1]=~/^FH0$/){
	# Unable to read config file, hence print all the info in data file
	$flag0=0;
	print  $data ;     
	close($_[1]);
	die ;
    }
}

sub ipConvo {   
    my(@array ,@temp);
    # i hope there are not more than 10 servers for the same web address, else this will bug
    for($i = 0;$i<10; $i++){
	$addr = inet_ntoa(scalar gethostbyname($_[0]));
	push (@temp,$addr);
    }
    return uniq(@temp) ;    
}


local( *FH1 ) ;
open( FH1, $file1) or err("can't open data file\n",FH1) ;
 $data    = do { local( $/ ) ; <FH1> } ;

local( *FH0 ) ;
open( FH0, $file0) or err("can't open config file\n",FH0) ;
 $config    = do { local( $/ ) ; <FH0> } if $flag0 == 1 ;


my @dataLines = split(/\n/,$data) ;
for ( $t= 0;$t<12;$t++){
    my $r =shift(@dataLines) ;
    print $r,"\n";
}
my @array = split(/\n/,$config) ;
shift(@array);

foreach (@array){
    my @line = split(/\t/,$_);    
    $num=3;
    for($i=0;$i<scalar(@line);$i++){
	if($line[$i]=~/[-]/){
	    $num-- ;
	}
    }
    
    if($num ==0){
        print ;
    }
    elsif($num ==1){
	if ( $line[0] =~/^\d\d*$/){
	    if ($line[0]==80) {
		print  ;
	    }
	    else{
		for($t= 0;$t<scalar(@dataLines);$t++)
		{
		    my @list =split(/\t/,$dataLines[$t]) ;
		    if( $line[0] == $list[5])
		    {
			delete $dataLines[$t] ;
		    }
		    
		}
	    }
	}
	elsif($line[1] =~/(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)/)
	{	   
	    for($t= 0;$t<scalar(@dataLines);$t++)
	    {
		my @list =split(/\t/,$dataLines[$t]) ;
		if( $line[1] eq $list[2])
		{
		    delete $dataLines[$t] ;
		}
	    }
	}
	elsif( $line[2] =~ /^(?:(?:ht|f)tp(?:s?)\:\/\/|~\/|\/)?(?:\w+:\w+@)?(?:(?:[-\w]+\.)+(?:com|org|net|gov|mil|biz|info|mobi|name|aero|jobs|museum|travel|[a-z]{2}))(?::[\d]{1,5})?((?:(?:\(?:\/(?:[-\w~!$+|.,=]|%[a-f\d]{2})+)+|\/)+|\?|#)?(?:(?:\?(?:[-\w~!$+|.,*:]|%[a-f\d{2}])+=?(?:[-\w~!$+|.,*:=]|%[a-f\d]{2})*)(?:&(?:[-\w~!$+|.,*:]|%[a-f\d{2}])+=?(?:[-\w~!$+|.,*:\=]|%[a-f\d]{2})*)*)*(?:#(?:[-\w~!$+|.,*:=]|%[a-f\d]{2})*)?$/ )
	{
	    @ipList = ipConvo($line[2]);
	    for($w= 0;$w<scalar(@ipList);$w++)
	    {
		for($t= 0;$t<scalar(@dataLines);$t++)
		{
		    my @list =split(/\t/,$dataLines[$t]) ;
		    if( $ipList[$w] eq $list[2])
		    {
			delete $dataLines[$t] ;
		    }
		}	    
	    }	    
	}
    }
    elsif($num==2 )
    {
	if ($line[0] =~/^\d\d*$/ && $line[1] =~/(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)/ ){
#	    print "found double port and ip add rule \n" ; 
	    for($t= 0;$t<scalar(@dataLines);$t++)
	    {
		my @list =split(/\t/,$dataLines[$t]) ;
		if( $line[0] == $list[5]  && $line[1] eq $list[2])
		{
		    delete $dataLines[$t] ;
		}
		
	    }

	    
	    
	    
	} elsif($line[0] =~ /^\d\d*$/ && $line[2] =~ /^(?:(?:ht|f)tp(?:s?)\:\/\/|~\/|\/)?(?:\w+:\w+@)?(?:(?:[-\w]+\.)+(?:com|org|net|gov|mil|biz|info|mobi|name|aero|jobs|museum|travel|[a-z]{2}))(?::[\d]{1,5})?((?:(?:\(?:\/(?:[-\w~!$+|.,=]|%[a-f\d]{2})+)+|\/)+|\?|#)?(?:(?:\?(?:[-\w~!$+|.,*:]|%[a-f\d{2}])+=?(?:[-\w~!$+|.,*:=]|%[a-f\d]{2})*)(?:&(?:[-\w~!$+|.,*:]|%[a-f\d{2}])+=?(?:[-\w~!$+|.,*:\=]|%[a-f\d]{2})*)*)*(?:#(?:[-\w~!$+|.,*:=]|%[a-f\d]{2})*)?$/ ){

# 	    print "found double port and web address rule";
	    @ipList = ipConvo($line[2]);
	    for($w= 0;$w<scalar(@ipList);$w++)
	    {
		for($t= 0;$t<scalar(@dataLines);$t++)
		{
		    my @list =split(/\t/,$dataLines[$t]) ;
		    if( $ipList[$w] eq $list[2] && $line[0] == $list[5] )
		    {
			delete $dataLines[$t] ;
		    }
		}	    
	    }    

	}

    }
    elsif($num ==3){
#	print " no action as its still no such action involved\n" ;
    }
    
     
}

for ($t=0;$t<scalar(@dataLines);$t++){ 
    if (!$dataLines[$t] =~/^$/){
    print $dataLines[$t],"\n" ;
    }
}
close($FH1) ;
close($FH0) ;

    
    
    
    

