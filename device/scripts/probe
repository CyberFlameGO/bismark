#!/bin/sh
# Send UDP probes to Bismark server and
# acts depending on the answer
#
# Currently implements:
# - Bismark server heartbeat
# - on-demand SSH tunnel
# - light SSH tunnel shutdown
#
# author: walter.dedonato@unina.it

# Load configuration file
. ~/conf/dev.conf

# Probe message generator
msg () {
	echo "$DEVID ping"
	sleep 3
	return 0
}

# OS depending options
if [ -e /etc/openwrt_version ]; then
	NC_OPTS="-nuc"
	SSH_OPTS="-y -N"
else
	NC_OPTS="-q1 -nu"
	SSH_OPTS="-N"
fi

# Send probe and store reply
msg | nc $NC_OPTS $SERVER $PROBE_PORT > /tmp/reply

# If unable to probe the server open a tunnel for 15 minutes each 30 minutes
[ -e /tmp/server_last ] || echo `date +%s` > /tmp/server_last
if [ ! -s /tmp/reply ] && [ $(( `date +%s` - `cat /tmp/server_last`)) -gt 900 ]; then
    if [ -e /tmp/tunnel ]; then
        echo "stop $(cat /tmp/tunnel)" > /tmp/reply
        rm /tmp/tunnel
    else
        RANDOM=$(( `date +%s` % 32767 ))
        port=$(( RANDOM % 5000 + 5000 ))
        echo "fwd $port" > /tmp/reply
        ssh -i $SSH_KEY $USER@$SERVER '. etc/bdm.conf ; bin/sqlite3 -list $BDM_DB "INSERT INTO tunnels VALUES(\"'$DEVID'\",'$port','$(date +%s)');"'
        echo $port > /tmp/tunnel
    fi
    echo `date +%s` > /tmp/server_last
fi

# Parse reply
read cmd value < /tmp/reply
case $cmd in 
fwd)
	# on-demand SSH tunnel
	ssh $SSH_OPTS -i $SSH_KEY -R $value:127.0.0.1:22 $USER@$SERVER &
;;
pong)
	# Server heartbeat
	date +%s > /tmp/server_last
;;
update)
	# Software update
	echo "$(date) - Updating $value" > /tmp/update.log
	case $value in
	all)
		ssh -i $SSH_KEY $USER@$SERVER 'cd bismark/device; tar -cf - conf/* scripts/*' | tar -xvf - >> /tmp/update.log
		ssh -i $SSH_KEY $USER@$SERVER 'svn info bismark | awk "/^Rev/{ print \$2 ; exit }"' > ~/VERSION
	;;
	*)
		ssh -i $SSH_KEY $USER@$SERVER 'cd bismark/device; tar -cf - '$value | tar -xvf - >> /tmp/update.log
	;;
	esac
	echo "$(date) - Update completed" >> /tmp/update.log
	cat /tmp/update.log | nc $NC_OPTS $SERVER $((PROBE_PORT+1))
;;
info)
	# Info reply
	sleep 1
	nc $NC_OPTS $SERVER $((PROBE_PORT+1)) <<-end
		Version: $(cat ~/VERSION)
	end
;;
esac
